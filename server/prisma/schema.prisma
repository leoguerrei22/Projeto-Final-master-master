datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  name        String       @db.VarChar(255)
  email       String       @unique
  password    String
  phone       String?      @db.VarChar(255)
  role        Int          @default(1)
  reservations Reservation[]
  deleted     Boolean      @default(false)
  @@index([email])
}

  model Reservation {
    id             Int          @id @default(autoincrement())
    user           User         @relation(fields: [userId], references: [id])
    userId         Int
    date           DateTime
    quantity       Int
    hour           String
    reservationTables ReservationTable[]
    observations   String?      @db.VarChar(255)
    orders         Order[]
    invoice        Invoice?
    deleted        Boolean      @default(false)
    status         String       @default("pendente")
  }

model Table {
  id         Int         @id @default(autoincrement())
  number     Int         @unique
  seats      Int
  status     String      @default("Available")
  reservationTables ReservationTable[]
  deleted    Boolean     @default(false)
}

model ReservationTable {
  id            Int         @id @default(autoincrement())
  reservation   Reservation @relation(fields: [reservationId], references: [id])
  reservationId Int
  table         Table       @relation(fields: [tableId], references: [id])
  tableId       Int
}

model Order {
  id            Int          @id @default(autoincrement())
  reservation   Reservation  @relation(fields: [reservationId], references: [id])
  reservationId Int
  orderProducts OrderProduct[]
  observations  String?      @db.VarChar(255)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  status        String       @default("pending")
  deleted       Boolean      @default(false)
}

model OrderProduct {
  orderId   Int
  order     Order   @relation(fields: [orderId], references: [id])
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int

  @@id([orderId, productId])
}

model Product {
  id          Int    @id @default(autoincrement())
  name        String @db.VarChar(255)
  category    String @db.VarChar(255)
  observations String? @db.VarChar(255)
  stock       Int   @default(0)
  status      String @default("unavailable")
  orderProducts OrderProduct[]
  price       Float
  deleted     Boolean @default(false)
}

model Invoice {
  id             Int          @id @default(autoincrement())
  reservation    Reservation  @relation(fields: [reservationId], references: [id])
  reservationId  Int          @unique
  billingDetails String?     @db.VarChar(255)
  paymentMethod  String       @db.VarChar(255)
  observations   String?      @db.VarChar(255)
  paymentStatus  String       @default("pending")
  deleted        Boolean      @default(false)
}
