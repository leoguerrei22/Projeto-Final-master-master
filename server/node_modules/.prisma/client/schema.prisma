datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  name        String       @db.VarChar(255)
  email       String       @unique
  password    String
  phone       String?      @db.VarChar(255)
  role        Int          @default(1)
  orders      Order[]
  reservations Reservation[]
  invoices    Invoice[]
  deleted     Boolean      @default(false)
  @@index([email])
}

model Reservation {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  user        User         @relation(fields: [userId], references: [id])
  userId      Int
  date        DateTime
  quantity    Int
  hour        String
  reservationTables ReservationTable[]
  observations String?     @db.VarChar(255)
  orders      Order[]
  deleted     Boolean      @default(false)
}

model Table {
  id         Int         @id @default(autoincrement())
  number     Int         @unique
  seats      Int
  status     String      @default("Available")
  orders     Order[]
  reservationTables ReservationTable[]
  deleted    Boolean     @default(false)
}

model ReservationTable {
  id            Int         @id @default(autoincrement())
  reservation   Reservation @relation(fields: [reservationId], references: [id])
  reservationId Int
  table         Table       @relation(fields: [tableId], references: [id])
  tableId       Int
}

model Order {
  id            Int          @id @default(autoincrement())
  table         Table        @relation(fields: [tableId], references: [id])
  tableId       Int
  user          User         @relation(fields: [userId], references: [id])
  userId        Int
  reservation   Reservation? @relation(fields: [reservationId], references: [id])
  reservationId Int?
  products      Product[]
  observations  String?      @db.VarChar(255)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  status        String       @default("pending")
  invoice       Invoice?     @relation(fields: [invoiceID], references: [id])
  invoiceID     Int?
  deleted       Boolean      @default(false)
}

model Product {
  id          Int    @id @default(autoincrement())
  name        String @db.VarChar(255)
  category    String @db.VarChar(255)
  observations String? @db.VarChar(255)
  status      String @default("unavailable")
  orders      Order[]
  price       Float
  deleted     Boolean @default(false)
}

model Invoice {
  id             Int    @id @default(autoincrement())
  user           User   @relation(fields: [userId], references: [id])
  userId         Int
  billingDetails String? @db.VarChar(255)
  orders         Order[]
  paymentMethod  String @db.VarChar(255)
  observations   String? @db.VarChar(255)
  paymentStatus  String @default("pending")
  deleted        Boolean @default(false)
}
