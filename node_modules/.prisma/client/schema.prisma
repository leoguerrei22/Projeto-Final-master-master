
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Utilizador {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  nome         String @db.VarChar(255)
  email        String  @unique
  password     String 
  telefone     String? @db.VarChar(255)
  role  Int @default(1)
  pedidos      Pedido[]
  reservas     Reserva[]
  faturas      Fatura[]
  deleted      Boolean @default(false)
  @@index([email])
}

model Reserva {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  utilizador    Utilizador  @relation(fields: [utilizadorId], references: [id])
  utilizadorId  Int
  mesa          Int
  data          DateTime
  quantidade    Int
  observacoes   String? @db.VarChar(255)
  pedidos       Pedido[]
  deleted       Boolean     @default(false)
}

model Pedido {
  id            Int        @id @default(autoincrement())
  mesa          Int
  utilizador    Utilizador @relation(fields: [utilizadorId], references: [id])
  utilizadorId  Int
  reserva       Reserva    @relation(fields: [reservaId], references: [id])
  reservaId     Int
  produtos      Produto[]
  observacoes   String? @db.VarChar(255)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  status        String     @default("pendente")
  fatura        Fatura?    @relation(fields: [faturaID], references: [id])
  faturaID      Int?
  deleted       Boolean    @default(false)
}

model Produto {
  id          Int      @id @default(autoincrement())
  nome        String @db.VarChar(255)
  categoria   String @db.VarChar(255)
  observacoes String? @db.VarChar(255)
  status      String   @default("indisponivel")
  pedidos     Pedido[]
  preco Float
  deleted     Boolean  @default(false)
}

model Fatura {
  id                 Int        @id @default(autoincrement())
  utilizador         Utilizador @relation(fields: [utilizadorId], references: [id])
  utilizadorId       Int
  documentoParaFatura String? @db.VarChar(255)
  pedidos            Pedido[]
  formaPagamento     String @db.VarChar(255)
  observacoes        String? @db.VarChar(255)
  statusPagamento    String     @default("pendente")
  deleted            Boolean    @default(false)
}